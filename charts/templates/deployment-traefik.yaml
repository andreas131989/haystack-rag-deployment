apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "charts.fullname" . }}-api-gw
  labels:
    app.kubernetes.io/component: api-gw
    app.kubernetes.io/group: gateway
    app: {{ include "charts.fullname" . }}
  {{- include "charts.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.gatewayApiGw.replicas }}
  selector:
    matchLabels:
      app: {{ include "charts.fullname" . }}
      app.kubernetes.io/component: api-gw
      app.kubernetes.io/group: gateway
    {{- include "charts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "charts.fullname" . }}
        app.kubernetes.io/component: api-gw
        app.kubernetes.io/group: gateway
      {{- include "charts.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: wait-for-frontend
        image: busybox
        command: ['sh', '-c', 'until nc -z -w 1 haystack-rag-frontend.{{ .Release.Namespace }}.svc.cluster.local 3000; do echo "Waiting for frontend..."; sleep 5; done']
      containers:
      - name: traefik
        image: {{ .Values.gatewayApiGw.traefik.image.repository }}:{{ .Values.gatewayApiGw.traefik.image.tag | default .Chart.AppVersion }}
        args:
        {{- range .Values.gatewayApiGw.traefik.args }}
          - {{ tpl . $ | quote }}
        {{- end }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        ports:
        - name: web
          containerPort: 8080
        - name: traefik
          containerPort: 8081
        - name: websecure
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /ping
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources: {{- toYaml .Values.gatewayApiGw.traefik.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/traefik/conf.d
          readOnly: true
        - name: certs
          mountPath: /certs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: {{ include "charts.fullname" . }}-gateway-api-gw-config
      - name: certs
        secret:
          secretName: {{ .Values.certificate.secretName | default "rag-local-tls" }}
