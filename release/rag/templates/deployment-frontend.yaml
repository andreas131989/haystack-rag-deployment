---
# Source: rag/templates/deployment-frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haystack-rag-frontend
  labels:
    app.kubernetes.io/component: frontend
    app.kubernetes.io/group: frontend
    app: haystack-rag
    helm.sh/chart: rag-0.1.0
    app.kubernetes.io/name: rag
    app.kubernetes.io/instance: haystack
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haystack-rag
      app.kubernetes.io/component: frontend
      app.kubernetes.io/group: frontend
      app.kubernetes.io/name: rag
      app.kubernetes.io/instance: haystack
  template:
    metadata:
      labels:
        app: haystack-rag
        app.kubernetes.io/component: frontend
        app.kubernetes.io/group: frontend
        app.kubernetes.io/name: rag
        app.kubernetes.io/instance: haystack
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: frontend:local
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: react-app
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        name: frontend
        ports:
        - containerPort: 3000
          name: react-app
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: react-app
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: config
          readOnly: true
          subPath: nginx.conf
      volumes:
      - configMap:
          name: haystack-rag-frontend-config
        name: config
